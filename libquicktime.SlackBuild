#!/bin/sh
#
# Slackware build script for LibQuickTime
# Copyright (C) 2007,2008,2010,2012 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
# $Id: libquicktime.SlackBuild,v 1.8 2016/09/18 10:51:36 gsotirov Exp $
#

. ../../slack-package.conf

NAME=libquicktime
VERSION=1.2.4
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract and fix source
cd $TMP
tar -xvf $CWD/${NAME}-${VERSION}.tar.?z* || exit 3
cd $SRC
fix_source

if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  patch -p1 -b -z.orig < $CWD/${NAME}-${VERSION}.diff || exit 4
fi

# Configure
CFLAGS=$SLKCFLAGS \
CXXFLAGS=$SLKCFLAGS \
./configure --build=$ARCH-slackware-linux \
            --host=$ARCH-slackware-linux \
            --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --mandir=/usr/man \
            --docdir=/usr/doc/${NAME}-${VERSION} \
            --enable-gpl \
            --enable-shared=yes \
            --enable-static=no \
            --with-lame \
            --with-x \
            --with-opengl \
            --with-alsa \
            --with-gtk \
            --with-libdv \
            --with-libjpeg \
            --with-ffmpeg \
            --with-libpng \
            --with-schroedinger \
            --with-x264 || exit 4

# Build & install
make -j4 || exit 5
make -e DESTDIR=$PKG install || exit 6

# Prepare
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
( cd $SRC; create_docs $PKG ${NAME}-${VERSION} )
gzip_man $PKG

mkdir -p $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install
install -m 644 $CWD/slack-required $PKG/install
install -m 644 $CWD/slack-suggests $PKG/install

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
mkdir -p $SBDIR
install -m 644 $CWD/slack-desc       $SBDIR/slack-desc
install -m 644 $CWD/slack-required   $SBDIR/slack-required
install -m 644 $CWD/slack-suggests   $SBDIR/slack-suggests
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  install -m 644 $CWD/${NAME}-${VERSION}.diff $SBDIR/${NAME}-${VERSION}.diff
fi
install -m 644 $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Assemble
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg -l y -c n $PKG_DIR/${PKGNAME}.txz
cd $PKG_DIR
md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/${PKGNAME}.txt

# Cleanup (optionally)
if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

